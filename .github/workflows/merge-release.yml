name: Check pom.xml version and merge

on:
  workflow_run:
    workflows: ["Maven Test"]   # must match the name above
    branches: ["master"]        # only when Maven Test ran on master
    types:
      - completed

jobs:
  check-and-merge:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Grant write permissions to the contents

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Check for pom.xml changes
        id: check-pom
        run: |
          CURR_VERSION=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          git checkout HEAD~1 -- pom.xml
          PREV_VERSION=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          git reset .
          git restore .
          
          if [ "$PREV_VERSION" != "$CURR_VERSION" ]; then
            echo "pom.xml version has changed: $PREV_VERSION â†’ $CURR_VERSION"
            echo "current_version=$CURR_VERSION" >> $GITHUB_OUTPUT
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "project version has not changed. Nothing to do."
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Merge master into release
        if: steps.check-pom.outputs.version_changed == 'true'
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git checkout release
          git merge master --no-ff -m "release MacroMachine v${{ steps.check-pom.outputs.current_version }}"
          git push origin release
          
          git checkout master
          git tag release-${{ steps.check-pom.outputs.current_version }}
          git push --tag
