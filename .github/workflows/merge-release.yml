name: Check pom.xml version and merge

on:
  workflow_run:
    workflows: ["Maven Test"]
    branches: ["master"]
    types:
      - completed

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check.outputs.version_changed }}
      current_version: ${{ steps.check.outputs.current_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for pom.xml changes
        id: check
        run: |
          CURR_VERSION=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          git checkout HEAD~1 -- pom.xml
          PREV_VERSION=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          git reset .
          git restore .

          if [ "$PREV_VERSION" != "$CURR_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "current_version=$CURR_VERSION" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

  merge-release:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Merge master into release
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git checkout release
          git merge master --no-ff -m "release MacroMachine v${{ needs.check-version.outputs.current_version }}"
          git push origin release
          
          git checkout master
          git tag release-${{ needs.check-version.outputs.current_version }}
          git push --tag
